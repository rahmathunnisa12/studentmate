<% var activeCategory = activeCategory || 'all' %>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Dashboard</title>
  <!-- Google Font -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <!-- Font Awesome for Icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
  <style>
    :root {
      --bg: #f8f2ff;  
      --card-bg: #fff;
      --primary: #7c5ef7;
      --text: #333;
      --border-radius: 10px;
      --shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    }
    body {
      font-family: 'Inter', sans-serif;
      background-color: var(--bg);
      padding: 20px;
      margin: 0;
      display: flex;
      justify-content: center;
      align-items: start;
      min-height: 100vh;
    }
    .container {
      max-width: 600px;
      margin: auto;
      text-align: center;
    }
    h1 {
      color: var(--primary);
      margin-bottom: 20px;
    }
    form {
      display: flex;
      gap: 10px;
      flex-wrap: wrap;
      margin-bottom: 20px;
    }
    input[type="text"],
    input[type="date"],
    select {
      flex: 1;
      padding: 12px;
      border: 1px solid #ccc;
      border-radius: var(--border-radius);
      font-size: 14px;
    }
    button {
      padding: 12px 20px;
      background-color: var(--primary);
      color: white;
      border: none;
      border-radius: var(--border-radius);
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    button:hover {
      background-color: #6a4de6;
    }
    .filters {
      margin-bottom: 15px;
      display: flex;
      justify-content: center;
      gap: 10px;
      flex-wrap: wrap;
    }
    .filters button {
      background-color: #ddd;
      color: #333;
      border: none;
      padding: 6px 12px;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    .filters button:hover {
      background-color: #ccc;
    }
    .filters button.active {
      background-color: var(--primary);
      color: white;
    }
    .progress-summary {
      margin-bottom: 20px;
    }
    .progress-summary p {
      margin: 5px 0;
      font-size: 14px;
      color: var(--text);
    }
    .progress-bar {
      width: 100%;
      height: 10px;
      background-color: #ddd;
      border-radius: 5px;
      overflow: hidden;
      margin: 10px 0;
    }
    .progress-fill {
      height: 100%;
      background-color: #4caf50;
      transition: width 0.3s ease;
    }
    .task-list {
      margin-top: 20px;
      max-height: 300px;
      overflow-y: auto;
      border-radius: var(--border-radius);
      box-shadow: var(--shadow);
    }
    .task-card {
      background: white;
      padding: 15px;
      border-radius: var(--border-radius);
      box-shadow: var(--shadow);
      margin-bottom: 10px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      transition: transform 0.2s ease;
    }
    .task-card:hover {
      transform: scale(1.01);
    }
    .task-title {
      font-weight: bold;
      color: var(--text);
    }
    .task-due-date {
      color: #777;
      font-size: 14px;
    }
    .action-buttons {
      display: flex;
      gap: 10px;
      align-items: center;
    }
    .edit-btn,
    .delete-btn {
      padding: 5px 10px;
      border-radius: 5px;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    .edit-btn {
      background-color: #1e90ff;
      color: white;
    }
    .delete-btn {
      background-color: #e74c3c;
      color: white;
    }
    .edit-btn:hover {
      background-color: #1565c0;
    }
    .delete-btn:hover {
      background-color: #c0392b;
    }
    .links {
      margin-top: 20px;
      display: flex;
      flex-direction: column;
      gap: 10px;
      align-items: center;
    }
    .link-btn {
      display: inline-flex;
      align-items: center;
      gap: 5px;
      padding: 10px 20px;
      border-radius: var(--border-radius);
      background-color: var(--primary);
      color: white;
      text-decoration: none;
      transition: background-color 0.3s ease;
    }
    .link-btn:hover {
      background-color: #6a4de6;
    }
    .icon {
      font-size: 16px;
    }
    .logout-btn {
      display: block;
      text-align: center;
      margin-top: 20px;
      color: var(--primary);
      font-weight: bold;
      text-decoration: none;
    }
    .logout-btn:hover {
      text-decoration: underline;
    }

    /* Loading state */
    .loading {
      opacity: 0.6;
      pointer-events: none;
    }

    /* Completed Task Styling */
    .completed-task {
      background-color: #e6ffe6;
      text-decoration: line-through;
    }

    @media (max-width: 500px) {
      input[type="text"],
      input[type="date"],
      select {
        width: 100%;
      }
    }

    /* Screen reader only utility class */
    .sr-only {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border-width: 0;
    }
  </style>
</head>
<body>
  <% if (success_msg) { %>
  <div class="alert alert-success"><%= success_msg %></div>
<% } %>

<% if (error_msg) { %>
  <div class="alert alert-danger"><%= error_msg %></div>
<% } %>
  <div class="container">
    <h1>Welcome, <%= user.name %>!</h1>

    <!-- Add Task Form -->
    <form method="POST" action="/task">
      <input type="text" name="title" placeholder="Task Title" required />
      <input type="date" name="dueDate" required />
      <!-- Category Dropdown -->
      <select name="category">
        <option value="Work">Work</option>
        <option value="Personal">Personal</option>
        <option value="Study">Study</option>
        <option value="Other" selected>Other</option>
      </select>
      <button type="submit">Add Task</button>
    </form>

    <h2>Your Tasks</h2>

    <%
      let completedCount = 0;
      let totalTasks = tasks ? tasks.length : 0;
      if (tasks && Array.isArray(tasks)) {
        completedCount = tasks.filter(task => task.completed).length;
      }
    %>

    <div class="progress-summary">
      <% if (totalTasks > 0) { %>
        <p>You're <strong id="percent-done"><%= Math.round((completedCount / totalTasks) * 100) %>%</strong> done this week!</p>
        <div class="progress-bar">
          <div class="progress-fill" id="progress-fill" style="width: <%= Math.round((completedCount / totalTasks) * 100) %>%"></div>
        </div>
        <p><span id="task-count"><%= completedCount %> completed out of <%= totalTasks %></span> tasks</p>
      <% } else { %>
        <p>No tasks yet. Add one above to start tracking progress!</p>
      <% } %>
    </div>

    <!-- Category Filters -->
    <div class="filters">
  <button onclick="filterTasks(this, 'all')" class="<%= (activeCategory || 'all') === 'all' ? 'active' : '' %>">All</button>
  <button onclick="filterTasks(this, 'Work')" class="<%= (activeCategory || 'all') === 'Work' ? 'active' : '' %>">Work</button>
  <button onclick="filterTasks(this, 'Personal')" class="<%= (activeCategory || 'all') === 'Personal' ? 'active' : '' %>">Personal</button>
  <button onclick="filterTasks(this, 'Study')" class="<%= (activeCategory || 'all') === 'Study' ? 'active' : '' %>">Study</button>
  <button onclick="window.location.href='/dashboard'" style="background-color:#aaa;">Clear</button>
</div>

    <!-- Task List -->
    <div class="task-list">
      <% if (!tasks || tasks.length === 0) { %>
        <p style="padding: 15px;">No tasks found.</p>
      <% } else { %>
        <% 
          // Sort tasks by due date
          let sortedTasks = [...tasks].sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate));
        %>
        <% sortedTasks.forEach(task => { %>
          <div class="task-card <%= task.completed ? 'completed-task' : '' %>" data-category="<%= task.category %>">
            <div>
              <div class="task-title"><%= task.title %></div>
              <div class="task-due-date">Due: <%= task.dueDate.toDateString() %></div>
            </div>
            <div class="action-buttons">
              <label class="sr-only" for="task-complete-<%= task._id %>">Toggle completion</label>
              <input 
                type="checkbox" 
                id="task-complete-<%= task._id %>"
                name="completed"
                value="true"
                <%= task.completed ? 'checked' : '' %>
                onchange="toggleTaskCompletion('<%= task._id %>', this)"
              />
              <button class="edit-btn" onclick="location.href='/task/edit-task/<%= task._id %>'">Edit</button>
              <button class="delete-btn" onclick="if(confirm('Are you sure?')) location.href='/task/delete-task/<%= task._id %>'">Delete</button>
            </div>
          </div>
        <% }); %>
      <% } %>
    </div>

    <!-- Navigation Links -->
    <div class="links">
      <a href="/note/notes" class="link-btn">
        <i class="fas fa-book-open icon"></i> View Study Notes
      </a>
      <a href="/flashcards" class="link-btn">
        <i class="fas fa-flash icon"></i> Flashcard Study Mode
      </a>
    </div>

    <!-- Logout Button -->
    <a class="logout-btn" href="/logout">Logout</a>
  </div>

  <script>
    function filterTasks(button, category) {
      document.querySelectorAll('.filters button').forEach(btn => btn.classList.remove('active'));
      button.classList.add('active');
      window.location.href = '/dashboard?category=' + category;
    }

    function toggleTaskCompletion(taskId, checkbox) {
      const taskCard = checkbox.closest('.task-card');
      taskCard.classList.add('loading');

      const isCompleted = checkbox.checked;
      fetch(`/task/toggle-complete/${taskId}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ completed: isCompleted })
      })
      .then(response => response.json())
      .then(data => {
        document.getElementById('percent-done').textContent = `${data.percentDone}%`;
        document.getElementById('progress-fill').style.width = `${data.percentDone}%`;
        document.getElementById('task-count').innerHTML = `${data.completedCount} completed out of ${data.totalTasks}`;
        
        if (isCompleted) {
          taskCard.classList.add('completed-task');
        } else {
          taskCard.classList.remove('completed-task');
        }
      })
      .catch(err => {
        console.error("Error updating task:", err);
        alert("Failed to update task.");
        checkbox.checked = !checkbox.checked;
      })
      .finally(() => {
        taskCard.classList.remove('loading');
      });
    }
  </script>
</body>
</html> 